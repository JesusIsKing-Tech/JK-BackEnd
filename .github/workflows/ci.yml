name: CI - Build, Test e Docker

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:
  build:
    name: Build Maven
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do c칩digo
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Compilar o projeto
      run: mvn clean package -DskipTests=true
    
    - name: Gerar artefato (.jar)
      uses: actions/upload-artifact@v4
      with:
        name: app-jar
        path: target/jesus-king-tech-0.0.1-SNAPSHOT.jar


  test:
    name: Testes Unit치rios
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout do c칩digo
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Executar testes
      run: mvn test

  docker:
    name: Docker Build & Push
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout do c칩digo
      uses: actions/checkout@v4

    - name: Baixar artefato (.jar)
      uses: actions/download-artifact@v4
      with:
          name: app-jar
          path: target

    - name: Setup Docker Buildx (opcional, mas recomendado)
      uses: docker/setup-buildx-action@v3

    - name: Login no Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build da imagem Docker
      run: |
        docker build \
          --build-arg EMAIL_SENHA="${{ secrets.EMAIL_SENHA }}" \
          -t ${{ secrets.DOCKERHUB_USERNAME }}/projeto-spring:latest .

    - name: Enviar imagem para Docker Hub
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/projeto-spring:latest
