name: Java CI with Maven and Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do c칩digo
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Compilar o projeto com Maven
      run: mvn clean package -DskipTests=true

    - name: Listar arquivos gerados
      run: ls -l target

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout do c칩digo
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Executar testes unit치rios
      run: mvn test

  docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout do c칩digo
      uses: actions/checkout@v4

    - name: Login no Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Copiar artefatos para o contexto do Docker
      run: cp -r target .

    - name: Construir imagem Docker
      run: |
        docker build \
          --build-arg EMAIL_SENHA="${{ secrets.EMAIL_SENHA }}" \
          -t "${{ secrets.DOCKERHUB_USERNAME }}/projeto-spring:latest" .

    - name: Enviar imagem para o Docker Hub
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/projeto-spring:latest
